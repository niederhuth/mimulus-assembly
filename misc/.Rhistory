} else if(tmp1[1,]$overlap_up == TRUE & tmp1[1,]$overlap_down == FALSE) {
df2[df2$gene == tmp1[1,]$gene,]$new_pos <- gsub("0$","2",tmp1[1,]$up_pos)
#if the gene overlaps with the downstream gene and not the upstream gene, it is assigned an 8
} else if(tmp1[1,]$overlap_up == FALSE & tmp1[1,]$overlap_down == TRUE) {
df2[df2$gene == tmp1[1,]$gene,]$new_pos <- gsub("0$","8",tmp1[1,]$up_pos)
#if the gene doesn't overlap with either, then it is assigned a 5
} else if(tmp1[1,]$overlap_up == FALSE & tmp1[1,]$overlap_down == FALSE) {
df2[df2$gene == tmp1[1,]$gene,]$new_pos <- gsub("0$","5",tmp1[1,]$up_pos)
}
#If there is more than one gene in the region
} else if(nrow(tmp1) > 1 & nrow(tmp1) <= 9){
#Get the center point for each new gene
tmp1$gene_center <- NA
for(x in 1:nrow(tmp1)){
tmp1[x,]$gene_center <- mean(c(tmp1[x,]$start,tmp1[x,]$stop))
}
#Calculate the center position & range for the region
region_center <- mean(c(df[as.numeric(row.names(tmp1[1,]))-1,]$stop,df[as.numeric(row.names(tmp1[nrow(tmp1),]))+1,]$start))
region_range <- region_center - df[as.numeric(row.names(tmp1[1,]))-1,]$stop
#Identify the central most gene
tmp1$center_gene <- NA
if(nrow(subset(tmp1,start < region_center & stop > region_center)) == 1){
tmp1$center_gene <- subset(tmp1,start < region_center & stop > region_center)$gene
} else if(nrow(subset(tmp1,start < region_center & stop > region_center)) >1){
closest <- which.min(abs(tmp1$gene_center - region_center))
tmp1$center_gene <- tmp1[x,]$gene
}
if(TRUE %in% is.na(tmp1$center_gene)){
closest <- which.min(abs(tmp1$gene_center - region_center))
tmp1$center_gene <- tmp1[closest,]$gene
}
#Get the number of genes upstream & downstream of the center gene
up_genes <- tmp1[tmp1$start < tmp1[tmp1$gene == tmp1$center_gene,]$start,]
down_genes <- tmp1[tmp1$start > tmp1[tmp1$gene == tmp1$center_gene,]$start,]
range <- abs(tmp1[tmp1$gene == tmp1$center_gene,]$gene_center - region_center) > region_range/4
#If there are more than 4 genes upstream and less than 4 downstream
if(nrow(up_genes) > 4 & nrow(down_genes) < 4){
#Adjust the position of the center gene accordingly
center_count <- nrow(up_genes) + 1
df2[df2$gene == tmp1[tmp1$gene==tmp1$center_gene,]$gene,]$new_pos <- gsub("0$",center_count,tmp1[tmp1$gene==tmp1$center_gene,]$up_pos)
df2[df2$gene == tmp1[tmp1$gene==tmp1$center_gene,]$gene,]$center_gene <- tmp1[1,]$center_gene
#If there are more than 4 genes downstream and less than 4 upstream
} else if(nrow(up_genes) < 4 & nrow(down_genes) > 4) {
#Adjust the position of the center gene accordingly
center_count <- 10 - nrow(down_genes) - 1
df2[df2$gene == tmp1[tmp1$gene==tmp1$center_gene,]$gene,]$new_pos <- gsub("0$",center_count,tmp1[tmp1$gene==tmp1$center_gene,]$up_pos)
df2[df2$gene == tmp1[tmp1$gene==tmp1$center_gene,]$gene,]$center_gene <- tmp1[1,]$center_gene
} else {
#Check how close to the center the center gene really is, if ts greater than a quarter then 1/4th the range then we adjust
if(abs(tmp1[tmp1$gene == tmp1$center_gene,]$gene_center - region_center) > region_range/4){
#If the difference is greater than zero, then its downstream of the center, so change the count to 6
if(tmp1[tmp1$gene == tmp1$center_gene,]$gene_center - region_center > 0){
center_count <- 6
#Otherwise its upstream, so change the count to 4
} else {
center_count <- 4
}
#Otherwise it stays as 5
} else {
center_count <- 5
}
#Set the name for the center gene
df2[df2$gene == tmp1[tmp1$gene==tmp1$center_gene,]$gene,]$new_pos <- gsub("0$",center_count,tmp1[tmp1$gene==tmp1$center_gene,]$up_pos)
df2[df2$gene == tmp1[x,]$gene,]$center_gene <- tmp1[1,]$center_gene
df2[df2$gene == tmp1[x,]$gene,]$region_center <- region_center
}
#Now we deal with the other genes
if((center_count - 1) == nrow(up_genes) || (center_count - 1) == ((floor((center_count - 1)/2)*nrow(up_genes)))){
count=0
} else {
count=1
}
#If the number of upstream genes is more than 1
if(nrow(up_genes) > 1){
for(x in 1:nrow(up_genes)){
count=count+floor((center_count - 1)/nrow(up_genes))
df2[df2$gene == tmp1[x,]$gene,]$new_pos <- gsub("0$",count,tmp1[x,]$up_pos)
df2[df2$gene == tmp1[x,]$gene,]$center_gene <- tmp1[1,]$center_gene
df2[df2$gene == tmp1[x,]$gene,]$center_gene <- tmp1[1,]$center_gene
df2[df2$gene == tmp1[x,]$gene,]$region_center <- region_center
}
} else if(nrow(up_genes) == 1){
count=count+floor((center_count - 1)/2)
df2[df2$gene == up_genes[1,]$gene,]$new_pos <- gsub("0$",count,up_genes[1,]$up_pos)
df2[df2$gene == up_genes[1,]$gene,]$center_gene <- up_genes[1,]$center_gene
df2[df2$gene == up_genes[1,]$gene,]$region_center <- region_center
}
count=center_count
if(nrow(down_genes) > 1){
for(x in (nrow(tmp1)-nrow(down_genes)+1):nrow(tmp1)){
count=count+floor((9 - center_count)/nrow(down_genes))
df2[df2$gene == tmp1[x,]$gene,]$new_pos <- gsub("0$",count,tmp1[x,]$up_pos)
df2[df2$gene == tmp1[x,]$gene,]$center_gene <- tmp1[1,]$center_gene
df2[df2$gene == tmp1[x,]$gene,]$region_center <- region_center
}
} else if(nrow(down_genes) == 1){
count=count+floor((center_count - 1)/2)
df2[df2$gene == down_genes[1,]$gene,]$new_pos <- gsub("0$",count,down_genes[1,]$up_pos)
df2[df2$gene == down_genes[1,]$gene,]$center_gene <- down_genes[1,]$center_gene
df2[df2$gene == down_genes[1,]$gene,]$region_center <- region_center
}
} else {
print("Warning greater than 9 genes in region")
for(x in 1:nrow(tmp1)){
count=paste("x",x,sep="")
df2[df2$gene == tmp1[x,]$gene,]$new_pos <- gsub("0$",count,tmp1[x,]$up_pos)
df2[df2$gene == tmp1[x,]$gene,]$center_gene <- tmp1[1,]$center_gene
df2[df2$gene == tmp1[x,]$gene,]$region_center <- region_center
}
}
}
#
write.table(df2[,c(5,14)],file="rename_pseudogene.map",sep="\t",quote=FALSE,row.names=FALSE,col.names=FALSE)
a <- c(1,2,3,4,5)
a
a[4]
length(vector)
a <- c(1,2,3,4,5)
a[4]
length(a)
a <- c((1,2),(3,4))
a <- c(c(1,2),c(3,4))
a
a <- matrix(c(1,2),c(3,4))
a <- matrix((1,2),(3,4))
a <- matrix(1,2,3,4)
a
a <- matrix(nrow=2,ncol=2)
a
a <- matrix(data=c(1,2,3,4),nrow=2,ncol=2)
a
a <- matrix(data=c(1,2,3,4,5),nrow=2,ncol=2)
a <- matrix(data=c(1,2,3,4,5,6),nrow=2,ncol=2)
a <- matrix(data=c(1,2,3,4,5),nrow=2,ncol=2)
a <- matrix(data=c(1,2,3,4),nrow=2,ncol=2)
a
a <- matrix(data=c(1,2,3,4),nrow=2,ncol=6)
a
a <- matrix(data=c(1,2,3,4),nrow=2,ncol=2)
a
dim(a)
a[2,1]
a[2,2] <- 10000
a
df <- data.frame(row.names=c(“v1”,”v2”,”v3”)Var1=c(1,2,3),Var2=c(4,5,6))
df <- data.frame(row.names=c("v1","v2","v3"),Var1=c(1,2,3),Var2=c(4,5,6))
df
df$Var2
df$Var3 <- c(7,8,9)
df
df[df$Var1 > 2,]
df[df$Var1 > 1 & df$Var3 <= 8,]
df[df$Var1 > 1 | df$Var3 <= 8,]
TeaTasting <-
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
fisher.test(TeaTasting, alternative = "greater")
BiocManager::install(“DESeq2")
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
vignette(BioConductor)
vignette(BioConducter)
vignette(BioManager)
library(ape)
vignette(ape)
vignette("ape")
library(ggtree)
vignette(ggtree)
vignette("ggtree")
library(DESeq2)
vignette(DESeq1)
vignette(DESeq2)
vignette("DESeq2")
setwd("projects/mimulus-assembly/misc/")
library(DESeq2)
cts <- read.table("expression.tsv",header=T,row.names = 1)
head(cts)
head(cts)
cts <- read.table("expression.tsv",header=T,row.names = 1)
coldata <- read.table("expression-design.tsv",row.names = 1,header=T)
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition + genotype)
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition)
head(cts)
ls
head(coldata)
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ Condition + Genotype)
dds
dds <- estimateSizeFactors(dds)
dds <- estimateDispersions(dds)
dds
plotCounts(dds, gene, intgroup="condition")
ls
head(coldata)
coldata$condition2 <- paste(coldata$Genotype,coldata$Condition,sep="_")
coldata
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition2)
dds <- estimateSizeFactors(dds)
dds <- estimateDispersions(dds)
plotCounts(dds, gene="MgL1_08g01730", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g01750", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g01740", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g10510", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g10530", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g10520", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g10540", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g01750", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g01750", intgroup="condition2",returnData = T)
MF <- plotCounts(dds, gene="MgL1_08g01750", intgroup="condition2",returnData = T)
head MF
head(MF)
library(ggplot2)
vim MF
MF
subset(MF,MF$condition2 == "S1_Inland")
subset(MF,MF$condition2 == "S1_Inland" | MF$condition2 == "S1_Coastal")
MF2 <- subset(MF,MF$condition2 == "S1_Inland" | MF$condition2 == "S1_Coastal" | MF$condition2 == "L1_Inland" | MF$condition2 == "L1_Coastal" )
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + theme_bw()
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_point(aes(x=condition2,y=count)) + theme_bw()
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw()
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count),notch = T) + geom_jitter(aes(x=condition2,y=count)) + theme_bw()
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw()
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw() + scale_y_continuous(expand=c(0,0))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,100))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,120))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,110))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count)) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,110))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2))) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,110))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous(expand=c(0,0),limits = c(0,110))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110))
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("")
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + theme(legend.key = NULL)
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
coldata <- subset(coldata,coldata$condition2 == "S1_Inland" | coldata$condition2 == "S1_Coastal" | coldata$condition2 == "L1_Inland" | coldata$condition2 == "L1_Coastal" )
coldata
head(cts)
View(cts)
cts
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition2)
dds
dds <- nbinomWaldTest(dds)
results(dds)
L1vL1 <- results(dds,contrast=c("L1_Coastal",L1_Inland))
L1vL1 <- results(dds,contrast=c("L1_Coastal",L1_inland))
coldata
L1vL1 <- results(dds,contrast=c("L1_Coastal","L1_Inland"))
L1vL1 <- results(dds,contrast=c("L1_Coastal","L1_Inland"))
dds
dds$condition2
L1vL1 <- results(dds,contrast=list("L1_Coastal","L1_Inland"))
dds$condition2
results(dds,contrast=list("L1_Coastal","L1_Inland"))
results(dds,contrast=list("L1_Bud","L1_Inland"))
results(dds,contrast=list("L1_Bud","L1_Root"))
results(dds)
results(dds,contrast=list("L1 Bud","L1 Inland"))
coldata <- read.table("expression-design.tsv",row.names = 1,header=T)
coldata$condition2 <- paste(coldata$Genotype,coldata$Condition,sep="_")
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata, design = ~ condition2)
dds <- estimateSizeFactors(dds)
dds
dds <- estimateDispersions(dds)
dds <- nbinomWaldTest(dds)
L1vL1 <- results(dds,contrast=c("L1_Coastal",L1_Inland))
L1vL1 <- results(dds,contrast=c("L1_Coastal","L1_Inland"))
dds$condition <- relevel(dds$condition, ref = "L1_Coastal")
dds$condition <- relevel(dds$condition, ref = "L1_Inland")
dds$condition2 <- relevel(dds$condition2, ref = "L1_Inland")
L1vL1 <- results(dds,contrast=c("L1_Coastal","L1_Inland"))
L1vL1 <- results(dds,contrast=c(condition2,"L1_Coastal","L1_Inland"))
L1vL1 <- results(dds,contrast=c("condition2","L1_Coastal","L1_Inland"))
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","L1_Coastal"))
L1vL1 <- results(dds,contrasts=c("L1_Inland","L1_Coastal"))
L1vL1 <- results(dds,contrast=c("condition","L1_Inland","L1_Coastal"))
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","L1_Coastal"))
resultsNames(dds)
dds$condition2 <- relevel(dds$condition2, ref = "L1_Bud")
resultsNames(dds)
dds$condition2 <- relevel(dds$condition2, ref = "L1_Inland")
resultsNames(dds)
dds <- nbinomWaldTest(dds)
resultsNames(dds)
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","L1_Coastal"))
head(L1vL1)
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
dds$condition2 <- relevel(dds$condition2, ref = "S1_Inland")
dds <- nbinomWaldTest(dds)
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","L1_Coastal"))
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","S1_Coastal"))
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
L1vL1 <- results(dds,contrast=c("condition2","S1_Inland","S1_Coastal"))
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
L1vL1 <- results(dds,contrast=c("condition2","L1_Inland","S1_Coastal"))
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
L1vL1 <- results(dds,contrast=c("condition2","L1_Coastal","S1_Coastal"))
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
ggplot(MF2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
L1vL1 <- results(dds,contrast=c("condition2","L1_Coastal","S1_Inland"))
L1vL1[row.names(L1vL1) == "MgL1_08g01750",]
plotCounts(dds, gene="MgL1_08g09640", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g02150", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g02140", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g02640", intgroup="condition2")
plotCounts(dds, gene="MgL1_08g02630", intgroup="condition2")
PCO1 <- plotCounts(dds, gene="MgL1_08g02150", intgroup="condition2", returnData = T)
ggplot(PCO1) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
PCO1 <- subset(PCO1,PCO1$condition2 == "S1_Inland" | PCO1$condition2 == "S1_Coastal" | PCO1$condition2 == "L1_Inland" | PCO1$condition2 == "L1_Coastal" )
ggplot(PCO1) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
PCO1
PCO1 <- plotCounts(dds, gene="MgL1_08g02150", intgroup="condition2", returnData = T)
PCO1
PCO1_2 <- subset(PCO1,PCO1$condition2 == "S1_Inland" | PCO1$condition2 == "S1_Coastal" | PCO1$condition2 == "L1_Inland" | PCO1$condition2 == "L1_Coastal" )
ggplot(PCO1+2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
ggplot(PCO1_2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
PCO1_2
ggplot(PCO1+2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,300)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
ggplot(PCO1_2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,400)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
ggplot(PCO1_2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,375)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
max(PCO1_2$count)
ggplot(PCO1_2) + geom_boxplot(aes(x=condition2,y=count,color=condition2)) + geom_jitter(aes(x=condition2,y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,275)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
PCO1_2$order <- NA
PCO1_2$order <- ifele(PCO1_2$condition2=="L1_Coastal",1,PCO1_2$order)
PCO1_2$order <- ifelse(PCO1_2$condition2=="L1_Coastal",1,PCO1_2$order)
PCO1_2$order <- ifelse(PCO1_2$condition2=="L1_CInland",2,PCO1_2$order)
PCO1_2$order <- ifelse(PCO1_2$condition2=="L1_Inland",2,PCO1_2$order)
PCO1_2$order <- ifelse(PCO1_2$condition2=="S1_Coastal",3,PCO1_2$order)
PCO1_2$order <- ifelse(PCO1_2$condition2=="S1_Inland",4,PCO1_2$order)
ggplot(PCO1_2) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,275)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02160", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61_2$order <- ifelse(WRKY61_2$condition2=="L1_Coastal",1,WRKY61_2$order)
WRKY61 <- plotCounts(dds, gene="MgL1_08g02160", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61_2$order <- ifelse(WRKY61_2$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61 <- plotCounts(dds, gene="MgL1_08g02160", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61
WRKY61 <- plotCounts(dds, gene="MgL1_08g02160", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02160", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,15)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02140 ", intgroup="condition2", returnData = T)
WRKY61 <- plotCounts(dds, gene="MgL1_08g02140", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02140", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02630", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g02640", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
results(dds,contrast=c("L1_Coastal","S1_Coastal"))
results(dds,contrast=c("condition2",L1_Coastal","S1_Coastal"))
results(dds,contrast=c("condition2","L1_Coastal","S1_Coastal"))
cvc <- results(dds,contrast=c("condition2","L1_Coastal","S1_Coastal"))
cvc[cvc$padj < 0.05]
cvc[cvc$padj < 0.05,]
cvc[na.omit(cvc$padj < 0.05),]
cvc[cvc$padj < 0.05 & cvc$padj != NA,]
subset(cvc,padj < 0.05)
subset(cvc,padj < 0.01)
subset(cvc,padj < 0.05 & log2FoldChange >= 1)
subset(cvc,padj < 0.05 & log2FoldChange >= 0.05)
subset(cvc,padj < 0.05 & log2FoldChange >= 0.5)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= 0.5)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1 & baseMean > 5)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 & baseMean > 5 | padj < 0.05 & log2FoldChange <= -1 & baseMean > 5)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 & baseMean > 10 | padj < 0.05 & log2FoldChange <= -1 & baseMean > 10)
LvL
lvl <- results(dds,contrast=c("condition2","L1_Inland","L1_Coastal"))
subset(lvl,padj < 0.05 & log2FoldChange >= 1 & baseMean > 10 | padj < 0.05 & log2FoldChange <= -1 & baseMean > 10)
subset(lvl,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
subset(lvl,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
ivi <- results(dds,contrast=c("condition2","L1_Inland","S1_Inland"))
subset(ivi,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)
S1 <- read.table("../data/S1_genes"header=F,sep="\t")
S1 <- read.table("../data/S1_genes",header=F,sep="\t")
L1 <- read.table("../data/L1_genes",header=F,sep="\t")
head(S1)
subset(ivi,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1 & row.names %in% S1$V1)
subset(ivi,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1 & row.names() %in% S1$V1)
subset(ivi,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% S1$V1)
subset(ivi,padj < 0.05 & log2FoldChange >= 1 & row.names(ivi) %in% S1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% S1$V1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% S1$V1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 & row.names(cvc) %in% S1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(cvc) %in% S1$V1)
row.names(ivi)
row.names(subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1))
row.names(subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)) %in% L1$V1
table(row.names(subset(cvc,padj < 0.05 & log2FoldChange >= 1 | padj < 0.05 & log2FoldChange <= -1)) %in% L1$V1)
subset(cvc,padj < 0.05 & log2FoldChange >= 1 & row.names(cvc) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(cvc) %in% L1$V1)
subset(ivi,padj < 0.05 & log2FoldChange >= 1 & row.names(ivi) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% L1$V1)
inland <- subset(ivi,padj < 0.05 & log2FoldChange >= 1 & row.names(ivi) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% L1$V1)
coast <- subset(ivi,padj < 0.05 & log2FoldChange >= 1 & row.names(ivi) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% L1$V1)
coast <- subset(cvc,padj < 0.05 & log2FoldChange >= 1 & row.names(cvc) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(cvc) %in% L1$V1)
l1 <- subset(lvl,padj < 0.05 & log2FoldChange >= 1 & row.names(lvl) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(lvl) %in% L1$V1)
wc -l lvl
nrow(lvl)
lvl
subset(lvl,padj < 0.05 & log2FoldChange >= 1 & row.names(lvl) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(lvl) %in% L1$V1)
coast
l1
svs <- results(dds,contrast=c("condition2","S1_Inland","S1_Coastal"))
s1 <- subset(svs,padj < 0.05 & log2FoldChange >= 1 & row.names(svs) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(svs) %in% L1$V1)
svs
s1
install.packages("VennDiagram")
library(VennDiagram)
cvc
row.names(coast) %in% row.names(inland)
table(row.names(coast) %in% row.names(inland))
row.names(coast) %in% row.names(inland)
D <- list(L1_Inland_v_L1_Coast = row.names(l1), L1_Inland_v_S1_Inland = row.names(inland), L1_Coast_v_S1_Coast = row.names(coast), S1_Inland_v_S1_Coast = row.names(s1))
D
install.packages("ggvenn")
libary(ggv)
libary(ggvenn)
library(ggvenn)
ls
ggvenn(D)
ggvenn(D,text_size = 8)
ggvenn(D,text_size = 0.5)
ggvenn(D,text_size = 2)
ggvenn(D,text_size = 4)
ggvenn(D,text_size = 3)
ggvenn(D,text_size = 3,set_name_size = 4)
ggvenn(D,text_size = 3,set_name_size = 3)
coast <- subset(ivi,padj < 0.05 & log2FoldChange >= 0 & row.names(ivi) %in% L1$V1 | padj < 0.05 & log2FoldChange <= 0 & row.names(ivi) %in% L1$V1)
coast
D
coast <- subset(ivi,padj < 0.05 & log2FoldChange >= 1 & row.names(ivi) %in% L1$V1 | padj < 0.05 & log2FoldChange <= -1 & row.names(ivi) %in% L1$V1)
table(D)
intersect(D$L1_Inland_v_L1_Coast,D$L1_Inland_v_S1_Inland,D$L1_Coast_v_S1_Coast,D$S1_Inland_v_S1_Coast)
intersect(D$L1_Inland_v_L1_Coast,D$L1_Inland_v_S1_Inland)
intersect(intersect(D$L1_Inland_v_L1_Coast,D$L1_Inland_v_S1_Inland),intersect(D$L1_Coast_v_S1_Coast,D$S1_Inland_v_S1_Coast))
WRKY61 <- plotCounts(dds, gene="MgL1_08g07640", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0),limits = c(0,110)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g07640", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
WRKY61 <- plotCounts(dds, gene="MgL1_08g10440”, intgroup="condition2", returnData = T)
WRKY61 <- plotCounts(dds, gene="MgL1_08g10440", intgroup="condition2", returnData = T)
WRKY61 <- subset(WRKY61,WRKY61$condition2 == "S1_Inland" | WRKY61$condition2 == "S1_Coastal" | WRKY61$condition2 == "L1_Inland" | WRKY61$condition2 == "L1_Coastal" )
WRKY61$order <- NA
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Coastal",1,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_CInland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="L1_Inland",2,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Coastal",3,WRKY61$order)
WRKY61$order <- ifelse(WRKY61$condition2=="S1_Inland",4,WRKY61$order)
ggplot(WRKY61) + geom_boxplot(aes(x=reorder(condition2,order),y=count,color=condition2)) + geom_jitter(aes(x=reorder(condition2,order),y=count,color=condition2)) + theme_bw() + scale_y_continuous("Normalized Read Counts",expand=c(0,0)) + scale_x_discrete("") + scale_color_discrete(guide=FALSE )
